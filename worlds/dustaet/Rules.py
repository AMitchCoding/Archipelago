import worlds.generic.Rules
from ..generic.Rules import set_rule, add_rule
from BaseClasses import MultiWorld
from ..AutoWorld import LogicMixin
from .Locations import advancement_table


class DustAETLogic(LogicMixin):
    pass


# Sets rules on entrances and advancements that are always applied
def set_rules(self) -> None:
    print(self.multiworld._entrance_cache)
    set_rule(self.multiworld.get_entrance("To Aurora Village from The Glade P2", self.player), lambda state: state.has("Dust Storm", self.player))
    set_rule(self.multiworld.get_entrance("To The Glade P2 from The Glade P1", self.player), lambda state: state.has("Slash", self.player))
    set_rule(self.multiworld.get_entrance("To The Sorrowing Meadow from Cirromon Caverns P2", self.player), lambda state: state.has("RedKey", self.player))
    set_rule(self.multiworld.get_entrance("To Cirromon Caverns P2 from Cirromon Caverns P1", self.player), lambda state: state.has("Crouch Slide", self.player))
    set_rule(self.multiworld.get_entrance("To Everdawn Basin from Blackmoor Mountains", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("Double Jump", self.player) and state.has("Fire Projectile", self.player) and state.has("Lightning Projectile", self.player) and state.has("Boost Jump", self.player) and state.has("YellowKey", self.player))
    set_rule(self.multiworld.get_entrance("To Blackmoor Mountains from The Sorrowing Meadow", self.player), lambda state: state.has("CoraQuest01", self.player) and state.has("CoraQuest02", self.player) and state.has("CoraQuest03", self.player) and state.has("CoraQuest04", self.player))
    set_rule(self.multiworld.get_location("Ability 15", self.player), lambda state: state.has("Double Jump", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Yellow Resonance Gem", self.player), lambda state: state.has("Double Jump", self.player) and state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("White Resonance Gem", self.player), lambda state: state.has("Crouch Slide", self.player) or state.has("WhiteKey", self.player))
    set_rule(self.multiworld.get_location("Ivydale Wall 1", self.player), lambda state: state.has("Crouch Slide", self.player) or state.has("WhiteKey", self.player))
    set_rule(self.multiworld.get_location("Ivydale Wall 2", self.player), lambda state: state.has("Crouch Slide", self.player) or state.has("WhiteKey", self.player))
    set_rule(self.multiworld.get_location("Ivydale Wall 3", self.player), lambda state: state.has("WhiteKey", self.player))
    set_rule(self.multiworld.get_location("Ivydale Laundry", self.player), lambda state: state.has("WhiteKey", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 4 Item 1", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 4 Item 2", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 3 Item 1", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 3 Item 2", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 3 Item 3", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 3 Item 4", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 3 Item 5", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 3 Item 6", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 2 Item 1", self.player), lambda state: state.has("Double Jump", self.player) and state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Forest Chest 2 Item 2", self.player), lambda state: state.has("Double Jump", self.player) and state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Rainbow Resonance Gem", self.player), lambda state: state.has("Cooler", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 5", self.player), lambda state: state.has("GreenKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 6", self.player), lambda state: state.has("GreenKey", self.player))
    set_rule(self.multiworld.get_location("Cove Key 1", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Cove Key 2", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Cove Wall 1", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Cove Teleport Stone", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 7", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 8", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 9", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 10", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 11", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 12", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 13", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 14", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Smith Key 7", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Smith Key 6", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Smith Key 8", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Forest Wall 1", self.player), lambda state: state.has("BlueKey", self.player))
    set_rule(self.multiworld.get_location("Forest Haley Device", self.player), lambda state: state.has("BlueKey", self.player))
    set_rule(self.multiworld.get_location("Smith Wall 1", self.player), lambda state: state.has("Double Jump", self.player) and state.has("BlueKey", self.player))
    set_rule(self.multiworld.get_location("Cave Key 14", self.player), lambda state: state.has("Boost Jump", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Cave Key 15", self.player), lambda state: state.has("Double Jump", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Cave Key 18", self.player), lambda state: state.has("Double Jump", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Cave Wall 7", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 11 Item 1", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 11 Item 2", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 11 Item 3", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 11 Item 4", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 11 Item 5", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 11 Item 6", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 10 Item 1", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 10 Item 2", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 10 Item 3", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 10 Item 4", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 10 Item 5", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 10 Item 6", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 9 Item 1", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 9 Item 2", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 8 Item 1", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 8 Item 2", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 8 Item 3", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 8 Item 4", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 4 Item 1", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("RedKey", self.player) and state.has("GreenKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 7 Item 1", self.player), lambda state: state.has("GreenKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 5 Item 1", self.player), lambda state: state.has("GreenKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 1 Item 1", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 1 Item 2", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Meadow Chest 1 Item 3", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Village Birthday Cake 1", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Village Birthday Cake 2", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Village Revival Stone 1", self.player), lambda state: state.has("ReedBox", self.player))
    set_rule(self.multiworld.get_location("Village Revival Stone 2", self.player), lambda state: state.has("ReedBox", self.player))
    set_rule(self.multiworld.get_location("Mansion A Item", self.player), lambda state: state.has("GreenKey", self.player) and state.has("CoraQuest01", self.player))
    set_rule(self.multiworld.get_location("Mansion B Item", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("CoraQuest02", self.player))
    set_rule(self.multiworld.get_location("Mansion C Item", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("CoraQuest03", self.player))
    set_rule(self.multiworld.get_location("Mansion D Item", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("CoraQuest04", self.player))
    set_rule(self.multiworld.get_location("Glade Wall 11", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Glade Wall 12", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Cave Doenjang 1", self.player), lambda state: state.has("RedMoss", self.player))
    set_rule(self.multiworld.get_location("Cave Doenjang 2", self.player), lambda state: state.has("RedMoss", self.player))
    set_rule(self.multiworld.get_location("Cave Doenjang 3", self.player), lambda state: state.has("RedMoss", self.player))
    set_rule(self.multiworld.get_location("Cave Reed's Box", self.player), lambda state: state.has("FidgetDoll", self.player))
    set_rule(self.multiworld.get_location("Cave Sheep 5", self.player), lambda state: state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Challenge 2 Key 1", self.player), lambda state: state.has("Double Jump", self.player))
    set_rule(self.multiworld.get_location("Challenge 3 Spectral Vest", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Challenge 4 Warrior Pendant", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Challenge 5 Ring", self.player), lambda state: state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Village Key Gift 1", self.player), lambda state: state.has("GeehanWatch", self.player))
    set_rule(self.multiworld.get_location("Village Key Gift 2", self.player), lambda state: state.has("GeehanWatch", self.player))
    set_rule(self.multiworld.get_location("Village Key Gift 3", self.player), lambda state: state.has("GeehanWatch", self.player))
    set_rule(self.multiworld.get_location("Sanctuary Standing Item", self.player), lambda state: state.has("TreasureKey", self.player, 4))
    set_rule(self.multiworld.get_location("Cave Red Orb", self.player), lambda state: state.has("RedKey", self.player) and state.has("Iron Grip", self.player))
    set_rule(self.multiworld.get_location("Farm Wall 1", self.player), lambda state: state.has("Double Jump", self.player) or state.has("Aerial Dust Storm", self.player))
    set_rule(self.multiworld.get_location("Farm Wall 2", self.player), lambda state: state.has("Double Jump", self.player) or state.has("Aerial Dust Storm", self.player))
    set_rule(self.multiworld.get_location("Farm Wall 3", self.player), lambda state: state.has("Double Jump", self.player) or state.has("Aerial Dust Storm", self.player))
    set_rule(self.multiworld.get_location("Farm Wall 4", self.player), lambda state: state.has("Double Jump", self.player) or state.has("Aerial Dust Storm", self.player))
    set_rule(self.multiworld.get_location("Farm Wall 5", self.player), lambda state: state.has("Double Jump", self.player) or state.has("Aerial Dust Storm", self.player))
    set_rule(self.multiworld.get_location("Farm Wall 6", self.player), lambda state: state.has("Double Jump", self.player) or state.has("Aerial Dust Storm", self.player))
    set_rule(self.multiworld.get_location("Farm Watch", self.player), lambda state: state.has("Double Jump", self.player) or state.has("Aerial Dust Storm", self.player))
    set_rule(self.multiworld.get_location("Cave Wall 9", self.player), lambda state: state.has("Double Jump", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Cave Chest 6 Item 1", self.player), lambda state: state.has("Boost Jump", self.player) and state.has("RedKey", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 15", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("Boost Jump", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 16", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("Boost Jump", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 17", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("Boost Jump", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 18", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("Boost Jump", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 19", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("Boost Jump", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 20", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("Boost Jump", self.player))
    set_rule(self.multiworld.get_location("Meadow Key 21", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("Boost Jump", self.player))
    set_rule(self.multiworld.get_location("Smith Key 1", self.player), lambda state: state.has("Double Jump", self.player) and state.has("BlueKey", self.player))
    set_rule(self.multiworld.get_location("Smith Key 3", self.player), lambda state: state.has("RedKey", self.player) and state.has("GreenKey", self.player) and state.has("YellowKey", self.player) and state.has("BlueKey", self.player))
    set_rule(self.multiworld.get_location("Smith Key 4", self.player), lambda state: state.has("RedKey", self.player) and state.has("GreenKey", self.player) and state.has("BlueKey", self.player))
    set_rule(self.multiworld.get_location("Ability 16", self.player), lambda state: state.has("Iron Grip", self.player) and state.has("CoraQuest01", self.player))
    set_rule(self.multiworld.get_location("Ability 17", self.player), lambda state: state.has("Fire Projectile", self.player) and state.has("Boost Jump", self.player) and state.has("Lightning Projectile", self.player) and state.has("Double Jump", self.player) and state.has("Iron Grip", self.player) and state.has("RedKey", self.player))
    for adv in advancement_table:
        if adv.__contains__("Chest"):
            set_rule(self.multiworld.get_location(adv, self.player), lambda state, multiworld=self.multiworld: state.can_reach(multiworld.get_region("The Glade P2", self.player), player=self.player))

